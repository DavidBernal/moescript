def enum = enumeration;
def upto = exports.upto = Enumerable function(m, n):
	for(var i = m; i <= n; i += 1):
		enum.yield! i
def up = exports.up = Enumerable function(n):
	for(var i = n; true; i += 1):
		enum.yield! i
def downto = exports.downto = Enumerable function(m, n):
	for(var i = m; i >= n; i -= 1):
		enum.yield! i
def down = exports.down = Enumerable function(n):
	for(var i = n; true; i -= 1):
		enum.yield! i
def takeWhile = exports.takeWhile = Enumerable function(I, condition):
	for var *a in I:
		if not condition.apply(null, a): 
			return undefined;
		enum.bypass! a
def select = exports.select = Enumerable function(I, condition):
	for var *a in I:
		if condition.apply(null, a):
			enum.bypass! a